generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/**
 * --- Enums ---
 */
enum ItemType {
  FG
  RM
  PACKAGING
}

enum SalesOrderStatus {
  CREATED
  PENDING
  PARTIALLY_SHIPPED
  FULLY_SHIPPED
  CANCELLED
}

enum SOApproval {
  AUTO_APPROVED
  WAITING_MANAGER
  WAITING_DIRECTOR
  APPROVED
  REJECTED
}

enum Level {
  STAFF
  SUPERVISOR
  MANAGER
  DIRECTOR
}

/**
 * --- Users ---
 */
model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String?
  level        Level    @default(STAFF)
  passwordHash String
  createdAt    DateTime @default(now())

  purchaseRequests PurchaseRequest[]
}

/**
 * --- Customers ---
 */
model Customer {
  id                 Int      @id @default(autoincrement())
  name               String
  address            String?
  phone              String?
  creditTermsDays    Int?     @default(0)
  outstandingBalance Decimal  @default(0) @db.Decimal(14, 2)
  createdAt          DateTime @default(now())

  salesOrders SalesOrder[]
}

/**
 * --- Items ---
 */
model Item {
  id          Int      @id @default(autoincrement())
  sku         String   @unique
  name        String
  type        ItemType
  uom         String?
  unitPrice   Decimal? @db.Decimal(14, 2)
  safetyStock Decimal? @db.Decimal(14, 3)
  createdAt   DateTime @default(now())

  purchaseOrderItems   PurchaseOrderItem[]
  purchaseRequestItems PurchaseRequestItem[]
  salesOrderItems      SalesOrderItem[]
  stock                Stock[]
}

/**
 * --- Warehouse & Stock ---
 */
model Warehouse {
  id   Int    @id @default(autoincrement())
  name String @unique

  stock Stock[]
}

model Stock {
  id          Int       @id @default(autoincrement())
  itemId      Int
  warehouseId Int
  batchNo     String?
  qtyOnHand   Decimal   @default(0) @db.Decimal(14, 3)
  qtyReserved Decimal   @default(0) @db.Decimal(14, 3)
  receivedAt  DateTime?
  expiry      DateTime?
  unitCost    Decimal?  @db.Decimal(14, 2)

  item      Item      @relation(fields: [itemId], references: [id])
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
}

/**
 * --- Sales Orders ---
 */
model SalesOrder {
  id             Int              @id @default(autoincrement())
  soNo           String           @unique
  customerId     Int
  status         SalesOrderStatus @default(CREATED)
  approvalStatus SOApproval       @default(AUTO_APPROVED)
  createdAt      DateTime         @default(now())

  customer Customer         @relation(fields: [customerId], references: [id])
  items    SalesOrderItem[]
}

model SalesOrderItem {
  id           Int     @id @default(autoincrement())
  salesOrderId Int
  itemId       Int
  qtyOrdered   Decimal @db.Decimal(14, 3)
  qtyFulfilled Decimal @default(0) @db.Decimal(14, 3)
  unitPrice    Decimal @db.Decimal(14, 2)

  salesOrder SalesOrder @relation(fields: [salesOrderId], references: [id])
  item       Item       @relation(fields: [itemId], references: [id])
}

/**
 * --- Suppliers ---
 */
model Supplier {
  id      Int             @id @default(autoincrement())
  name    String
  address String?
  phone   String?
  email   String?
  orders  PurchaseOrder[]
}

/**
 * --- Purchase Requests ---
 */
model PurchaseRequest {
  id            Int                   @id @default(autoincrement())
  prNo          String                @unique
  orderingDate  DateTime
  deliveryDate  DateTime
  notes         String?
  status        String                @default("CREATED")
  requestedBy   User?                 @relation(fields: [requestedById], references: [id])
  requestedById Int?
  createdAt     DateTime              @default(now())
  items         PurchaseRequestItem[]

  purchaseOrder PurchaseOrder? @relation("PR_PO")
}

model PurchaseRequestItem {
  id         Int      @id @default(autoincrement())
  productId  Int
  qty        Decimal  @db.Decimal(14, 3)
  uom        String
  qtyOrdered Decimal? @db.Decimal(14, 3)

  product   Item            @relation(fields: [productId], references: [id])
  request   PurchaseRequest @relation(fields: [requestId], references: [id])
  requestId Int
}

/**
 * --- Purchase Orders ---
 */
model PurchaseOrder {
  id           Int      @id @default(autoincrement())
  poNo         String   @unique
  orderingDate DateTime
  deliveryDate DateTime
  notes        String?
  status       String   @default("CREATED")
  supplierId   Int?
  createdAt    DateTime @default(now())

  supplier  Supplier?           @relation(fields: [supplierId], references: [id])
  request   PurchaseRequest?    @relation("PR_PO", fields: [requestId], references: [id])
  requestId Int?                @unique
  items     PurchaseOrderItem[]
}

model PurchaseOrderItem {
  id        Int      @id @default(autoincrement())
  productId Int
  qty       Decimal  @db.Decimal(14, 3)
  price     Decimal? @db.Decimal(14, 2)
  uom       String

  product Item          @relation(fields: [productId], references: [id])
  order   PurchaseOrder @relation(fields: [orderId], references: [id])
  orderId Int
}
